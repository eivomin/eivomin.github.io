<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-03-23T19:57:56+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">SLOW AND STEADY</title><subtitle>Blog</subtitle><author><name>eivomin</name></author><entry><title type="html">[백준] 1475. 방 번호</title><link href="http://localhost:4000/baekjoon/%EB%B0%B1%EC%A4%80-1475-%EB%B0%A9-%EB%B2%88%ED%98%B8/" rel="alternate" type="text/html" title="[백준] 1475. 방 번호" /><published>2023-03-23T00:00:00+09:00</published><updated>2023-03-23T00:00:00+09:00</updated><id>http://localhost:4000/baekjoon/%EB%B0%B1%EC%A4%80-1475-%EB%B0%A9%20%EB%B2%88%ED%98%B8</id><content type="html" xml:base="http://localhost:4000/baekjoon/%EB%B0%B1%EC%A4%80-1475-%EB%B0%A9-%EB%B2%88%ED%98%B8/"><![CDATA[<h2 id="1475---방-번호">1475.   방 번호</h2>

<hr />

<h3 id="code">Code</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">baekjoon</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">방번호_1475</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">String</span> <span class="n">s</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">10</span><span class="o">];</span>

        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="kt">int</span> <span class="n">idx</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)</span> <span class="o">-</span> <span class="sc">'0'</span><span class="o">;</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">idx</span> <span class="o">==</span> <span class="mi">9</span><span class="o">)</span>
                <span class="n">idx</span> <span class="o">=</span> <span class="mi">6</span><span class="o">;</span>
            <span class="n">arr</span><span class="o">[</span><span class="n">idx</span><span class="o">]++;</span>
        <span class="o">}</span>
        <span class="n">arr</span><span class="o">[</span><span class="mi">9</span><span class="o">]</span> <span class="o">=</span> <span class="n">arr</span><span class="o">[</span><span class="mi">6</span><span class="o">]</span> <span class="o">/</span> <span class="mi">2</span><span class="o">;</span>
        <span class="n">arr</span><span class="o">[</span><span class="mi">6</span><span class="o">]</span> <span class="o">-=</span> <span class="n">arr</span><span class="o">[</span><span class="mi">9</span><span class="o">];</span>

        <span class="kt">int</span> <span class="n">max</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">MIN_VALUE</span><span class="o">;</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">:</span> <span class="n">arr</span><span class="o">)</span>
            <span class="n">max</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">max</span><span class="o">,</span> <span class="n">i</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">max</span><span class="o">);</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>]]></content><author><name>eivomin</name></author><category term="Baekjoon" /><summary type="html"><![CDATA[1475. 방 번호]]></summary></entry><entry><title type="html">[백준] 13300. 방 배정</title><link href="http://localhost:4000/baekjoon/%EB%B0%B1%EC%A4%80-13300-%EB%B0%A9-%EB%B0%B0%EC%A0%95/" rel="alternate" type="text/html" title="[백준] 13300. 방 배정" /><published>2023-03-23T00:00:00+09:00</published><updated>2023-03-23T00:00:00+09:00</updated><id>http://localhost:4000/baekjoon/%EB%B0%B1%EC%A4%80-13300-%EB%B0%A9%20%EB%B0%B0%EC%A0%95</id><content type="html" xml:base="http://localhost:4000/baekjoon/%EB%B0%B1%EC%A4%80-13300-%EB%B0%A9-%EB%B0%B0%EC%A0%95/"><![CDATA[<h2 id="13300---방-배정">13300.   방 배정</h2>

<hr />

<h3 id="code">Code</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">baekjoon</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">방배정_13300</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">(),</span> <span class="s">" "</span><span class="o">);</span>
        <span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
        <span class="kt">int</span> <span class="no">K</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
        <span class="c1">// N : 인원 수, K : 최대 인원 수 / 1~6학년</span>
        <span class="kt">int</span><span class="o">[][]</span> <span class="n">arr</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">2</span><span class="o">][</span><span class="mi">6</span><span class="o">];</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="no">N</span><span class="o">;</span> <span class="n">i</span><span class="o">++){</span>
            <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">(),</span> <span class="s">" "</span><span class="o">);</span>
            <span class="kt">int</span> <span class="no">S</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span> <span class="c1">// 0: 여, 1: 남</span>
            <span class="kt">int</span> <span class="no">Y</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span> <span class="c1">// 학년</span>
            <span class="n">arr</span><span class="o">[</span><span class="no">S</span><span class="o">][</span><span class="no">Y</span><span class="o">-</span><span class="mi">1</span><span class="o">]++;</span>
        <span class="o">}</span>

        <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="mi">2</span><span class="o">;</span> <span class="n">i</span><span class="o">++){</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="mi">6</span><span class="o">;</span> <span class="n">j</span><span class="o">++){</span>
                <span class="k">if</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">&lt;=</span> <span class="no">K</span><span class="o">){</span>
                    <span class="n">cnt</span> <span class="o">++;</span>
                <span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">&gt;</span> <span class="no">K</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]%</span><span class="no">K</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span>
                        <span class="n">cnt</span><span class="o">+=</span> <span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]/</span><span class="no">K</span><span class="o">);</span>
                    <span class="k">else</span>
                        <span class="n">cnt</span><span class="o">+=</span> <span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]/</span><span class="no">K</span><span class="o">+</span><span class="mi">1</span><span class="o">);</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">cnt</span><span class="o">);</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>



    <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>]]></content><author><name>eivomin</name></author><category term="Baekjoon" /><summary type="html"><![CDATA[13300. 방 배정]]></summary></entry><entry><title type="html">[백준] 11328. Strfry</title><link href="http://localhost:4000/baekjoon/%EB%B0%B1%EC%A4%80-11328-Strfry/" rel="alternate" type="text/html" title="[백준] 11328. Strfry" /><published>2023-03-23T00:00:00+09:00</published><updated>2023-03-23T00:00:00+09:00</updated><id>http://localhost:4000/baekjoon/%EB%B0%B1%EC%A4%80-11328-Strfry</id><content type="html" xml:base="http://localhost:4000/baekjoon/%EB%B0%B1%EC%A4%80-11328-Strfry/"><![CDATA[<h2 id="11328---strfry">11328.   Strfry</h2>

<hr />

<h3 id="code">Code</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">baekjoon</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Strfry_11328</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="no">N</span><span class="o">;</span> <span class="n">i</span><span class="o">++){</span>
            <span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">(),</span> <span class="s">" "</span><span class="o">);</span>
            <span class="nc">String</span><span class="o">[]</span> <span class="n">arrA</span> <span class="o">=</span> <span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">().</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
            <span class="nc">String</span><span class="o">[]</span> <span class="n">arrB</span> <span class="o">=</span> <span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">().</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>

            <span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">arrA</span><span class="o">);</span>
            <span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">arrB</span><span class="o">);</span>

            <span class="nc">StringBuilder</span> <span class="n">sb1</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
            <span class="nc">StringBuilder</span> <span class="n">sb2</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">arrA</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span>
                <span class="n">sb1</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">arrA</span><span class="o">[</span><span class="n">j</span><span class="o">]);</span>

            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">arrB</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span>
                <span class="n">sb2</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">arrB</span><span class="o">[</span><span class="n">j</span><span class="o">]);</span>

            <span class="k">if</span><span class="o">(</span><span class="n">sb1</span><span class="o">.</span><span class="na">toString</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="n">sb2</span><span class="o">.</span><span class="na">toString</span><span class="o">()))</span>
                <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Possible"</span><span class="o">);</span>
            <span class="k">else</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Impossible"</span><span class="o">);</span>

        <span class="o">}</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>]]></content><author><name>eivomin</name></author><category term="Baekjoon" /><summary type="html"><![CDATA[11328. Strfry]]></summary></entry><entry><title type="html">[백준] 10808. 알파벳 개수</title><link href="http://localhost:4000/baekjoon/%EB%B0%B1%EC%A4%80-10808-%EC%95%8C%ED%8C%8C%EB%B2%B3-%EA%B0%9C%EC%88%98/" rel="alternate" type="text/html" title="[백준] 10808. 알파벳 개수" /><published>2023-03-23T00:00:00+09:00</published><updated>2023-03-23T00:00:00+09:00</updated><id>http://localhost:4000/baekjoon/%EB%B0%B1%EC%A4%80-10808-%EC%95%8C%ED%8C%8C%EB%B2%B3%20%EA%B0%9C%EC%88%98</id><content type="html" xml:base="http://localhost:4000/baekjoon/%EB%B0%B1%EC%A4%80-10808-%EC%95%8C%ED%8C%8C%EB%B2%B3-%EA%B0%9C%EC%88%98/"><![CDATA[<h2 id="10808---알파벳-개수">10808.   알파벳 개수</h2>

<hr />

<h3 id="code">Code</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">baekjoon</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>

<span class="cm">/*
 * a~z 26개 , a = 97
 * */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">알파벳개수_10808</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">String</span> <span class="no">S</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">26</span><span class="o">];</span>
        <span class="nc">StringBuilder</span> <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="no">S</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++){</span>
            <span class="n">arr</span><span class="o">[</span><span class="no">S</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)-</span><span class="mi">97</span><span class="o">]++;</span>
        <span class="o">}</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="mi">26</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
            <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">]+</span><span class="s">" "</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>

    <span class="o">}</span>
<span class="o">}</span>


</code></pre></div></div>]]></content><author><name>eivomin</name></author><category term="Baekjoon" /><summary type="html"><![CDATA[10808. 알파벳 개수]]></summary></entry><entry><title type="html">[백준] 10807. 개수 세기</title><link href="http://localhost:4000/baekjoon/%EB%B0%B1%EC%A4%80-10807-%EA%B0%9C%EC%88%98-%EC%84%B8%EA%B8%B0/" rel="alternate" type="text/html" title="[백준] 10807. 개수 세기" /><published>2023-03-23T00:00:00+09:00</published><updated>2023-03-23T00:00:00+09:00</updated><id>http://localhost:4000/baekjoon/%EB%B0%B1%EC%A4%80-10807-%EA%B0%9C%EC%88%98%20%EC%84%B8%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/baekjoon/%EB%B0%B1%EC%A4%80-10807-%EA%B0%9C%EC%88%98-%EC%84%B8%EA%B8%B0/"><![CDATA[<h2 id="10807---개수-세기">10807.   개수 세기</h2>

<hr />

<h3 id="code">Code</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">baekjoon</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">개수세기_10807</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">(),</span> <span class="s">" "</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">target</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="no">N</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
            <span class="k">if</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">())</span> <span class="o">==</span> <span class="n">target</span><span class="o">)</span>
                <span class="n">cnt</span><span class="o">++;</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">cnt</span><span class="o">);</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>]]></content><author><name>eivomin</name></author><category term="Baekjoon" /><summary type="html"><![CDATA[10807. 개수 세기]]></summary></entry><entry><title type="html">[TIL] 2023.03.23 TIL</title><link href="http://localhost:4000/til/TIL-2023.03.23-TIL/" rel="alternate" type="text/html" title="[TIL] 2023.03.23 TIL" /><published>2023-03-23T00:00:00+09:00</published><updated>2023-03-23T00:00:00+09:00</updated><id>http://localhost:4000/til/TIL-2023.03.23%20TIL</id><content type="html" xml:base="http://localhost:4000/til/TIL-2023.03.23-TIL/"><![CDATA[<h2 id="20230323-til">2023.03.23 TIL</h2>

<hr />

<h4 id="자바-공부">자바 공부</h4>

<p><a href="https://eivomin.github.io/java/Java-%EC%8A%A4%ED%8A%B8%EB%A6%BC/">Java - 스트림 정리</a></p>

<h4 id="알고리즘-참고-httpsgithubcomencrypted-defbasic-algo-lectureblobmasterworkbook0x03md">알고리즘 (참고. <a href="https://github.com/encrypted-def/basic-algo-lecture/blob/master/workbook/0x03.md">https://github.com/encrypted-def/basic-algo-lecture/blob/master/workbook/0x03.md</a>)</h4>

<table>
  <thead>
    <tr>
      <th>구분</th>
      <th>문제 분류</th>
      <th>문제</th>
      <th>문제 제목</th>
      <th>풀이 url</th>
      <th>추가 개념</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>배열</td>
      <td>연습 문제</td>
      <td>10808</td>
      <td><a href="https://www.acmicpc.net/problem/10808">알파벳 개수</a></td>
      <td><a href="https://eivomin.github.io/baekjoon/%EB%B0%B1%EC%A4%80-10808-%EC%95%8C%ED%8C%8C%EB%B2%B3-%EA%B0%9C%EC%88%98/">정답 코드</a></td>
      <td> </td>
    </tr>
    <tr>
      <td>배열</td>
      <td>기본 문제✔</td>
      <td>2577</td>
      <td><a href="https://www.acmicpc.net/problem/2577">숫자의 개수</a></td>
      <td><a href="https://eivomin.github.io/baekjoon/%EB%B0%B1%EC%A4%80-2577-%EC%88%AB%EC%9E%90%EC%9D%98-%EA%B0%9C%EC%88%98/">정답 코드</a></td>
      <td> </td>
    </tr>
    <tr>
      <td>배열</td>
      <td>기본 문제✔</td>
      <td>1475</td>
      <td><a href="https://www.acmicpc.net/problem/1475">방 번호</a></td>
      <td><a href="https://eivomin.github.io/baekjoon/%EB%B0%B1%EC%A4%80-1475-%EB%B0%A9-%EB%B2%88%ED%98%B8/">정답 코드</a></td>
      <td> </td>
    </tr>
    <tr>
      <td>배열</td>
      <td>기본 문제✔</td>
      <td>3273</td>
      <td><a href="https://www.acmicpc.net/problem/3273">두 수의 합</a></td>
      <td><a href="https://eivomin.github.io/baekjoon/%EB%B0%B1%EC%A4%80-3273-%EB%91%90-%EC%88%98%EC%9D%98-%ED%95%A9/">정답 코드</a></td>
      <td><strong>투포인터 공부</strong> 🥲</td>
    </tr>
    <tr>
      <td>배열</td>
      <td>기본 문제</td>
      <td>10807</td>
      <td><a href="https://www.acmicpc.net/problem/10807">개수 세기</a></td>
      <td><a href="https://eivomin.github.io/baekjoon/%EB%B0%B1%EC%A4%80-10807-%EA%B0%9C%EC%88%98-%EC%84%B8%EA%B8%B0/">정답 코드</a></td>
      <td> </td>
    </tr>
    <tr>
      <td>배열</td>
      <td>기본 문제</td>
      <td>13300</td>
      <td><a href="https://www.acmicpc.net/problem/13300">방 배정</a></td>
      <td><a href="https://eivomin.github.io/baekjoon/%EB%B0%B1%EC%A4%80-13300-%EB%B0%A9-%EB%B0%B0%EC%A0%95/">정답 코드</a></td>
      <td> </td>
    </tr>
    <tr>
      <td>배열</td>
      <td>기본 문제</td>
      <td>11328</td>
      <td><a href="https://www.acmicpc.net/problem/11328">Strfry</a></td>
      <td><a href="https://eivomin.github.io/baekjoon/%EB%B0%B1%EC%A4%80-11328-Strfry/">정답 코드</a></td>
      <td> </td>
    </tr>
    <tr>
      <td>배열</td>
      <td>기본 문제</td>
      <td>1919</td>
      <td><a href="https://www.acmicpc.net/problem/1919">애너그램 만들기</a></td>
      <td><a href="https://eivomin.github.io/baekjoon/%EB%B0%B1%EC%A4%80-1919-%EC%95%A0%EB%84%88%EA%B7%B8%EB%9E%A8-%EB%A7%8C%EB%93%A4%EA%B8%B0/">정답 코드</a></td>
      <td> </td>
    </tr>
  </tbody>
</table>

<h4 id="참고">참고</h4>
<ul>
  <li><a href="https://github.com/encrypted-def/basic-algo-lecture/blob/master/workbook.md">https://github.com/encrypted-def/basic-algo-lecture/blob/master/workbook.md</a></li>
</ul>

<h4 id="회고">회고</h4>]]></content><author><name>eivomin</name></author><category term="TIL" /><summary type="html"><![CDATA[2023.03.23 TIL]]></summary></entry><entry><title type="html">[Java] 스트림</title><link href="http://localhost:4000/java/Java-%EC%8A%A4%ED%8A%B8%EB%A6%BC/" rel="alternate" type="text/html" title="[Java] 스트림" /><published>2023-03-23T00:00:00+09:00</published><updated>2023-03-23T00:00:00+09:00</updated><id>http://localhost:4000/java/Java-%EC%8A%A4%ED%8A%B8%EB%A6%BC</id><content type="html" xml:base="http://localhost:4000/java/Java-%EC%8A%A4%ED%8A%B8%EB%A6%BC/"><![CDATA[<h2 id="스트림">스트림</h2>

<hr />

<p>컬렉션 및 배열에 저장된 요소를 반복 처리하기 위해서는 for 문을 이용하거나 Iterator(반복자)를 이용했다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="o">....;</span>
    <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++){</span>
        <span class="nc">String</span> <span class="n">item</span> <span class="o">=</span> <span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
        <span class="c1">//item 처리</span>
        <span class="o">}</span>
</code></pre></div></div>
<p>그리고 Set에서 요소를 하나씩 처리하기 위해 Iterator를 다음과 같이 사용했다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="nc">Set</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">set</span> <span class="o">=</span> <span class="o">...;</span>
    <span class="nc">Iterator</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">iterator</span> <span class="o">=</span> <span class="n">set</span><span class="o">.</span><span class="na">iterator</span><span class="o">();</span>
    <span class="k">while</span><span class="o">(</span><span class="n">iterator</span><span class="o">.</span><span class="na">hasNext</span><span class="o">()){</span>
        <span class="nc">String</span> <span class="n">item</span> <span class="o">=</span> <span class="n">iterator</span><span class="o">.</span><span class="na">next</span><span class="o">();</span>
        <span class="c1">//요소 처리</span>
    <span class="o">}</span>
</code></pre></div></div>
<p>Java 8부터는 또 다른 방법으로 컬렉션 및 배열의 요소를 반복 처리하기 위해 스트림을 사용할 수 있다. 스트림은
 요소들이 하나씩 흘러가면서 처리된다는 의미를 가지고 있다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="nc">Stream</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">stream</span> <span class="o">=</span> <span class="n">list</span><span class="o">.</span><span class="na">stream</span><span class="o">();</span>
    <span class="n">stream</span><span class="o">.</span><span class="na">forEach</span><span class="o">(</span><span class="n">item</span> <span class="o">-&gt;</span> <span class="c1">//item 처리);</span>
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="kn">package</span> <span class="nn">ch17.sec01.exam01</span><span class="o">;</span>
 
 <span class="kn">import</span> <span class="nn">java.util.stream.Stream</span><span class="o">;</span>
 <span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
 <span class="kd">public</span> <span class="kd">class</span> <span class="nc">StreamExample</span> <span class="o">{</span>
  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
   <span class="c1">//Set 컬렉션 생성</span>
   <span class="nc">Set</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">set</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashSet</span><span class="o">&lt;&gt;();</span>
   <span class="n">set</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"홍길동"</span><span class="o">);</span>
   <span class="n">set</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"신용권"</span><span class="o">);</span>
   <span class="n">set</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"감자바"</span><span class="o">);</span>
 
   <span class="c1">//Stream을 이용한 요소 반복 처리</span>
   <span class="nc">Stream</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">stream</span> <span class="o">=</span> <span class="n">set</span><span class="o">.</span><span class="na">stream</span><span class="o">();</span>
   <span class="n">stream</span><span class="o">.</span><span class="na">forEach</span><span class="o">(</span><span class="n">name</span><span class="o">-&gt;</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">name</span><span class="o">));</span>
  <span class="o">}</span>
 <span class="o">}</span>
</code></pre></div></div>

<p>Stream은 Iterator와 비슷한 반복자이지만, 다음과 같은 차이점을 가지고 있다.
1) 내부 반복자이므로 처리 속도가 빠르고 병렬 처리에 효율적이다.
2) 람다식으로 다양한 요소 처리를 정의할 수 있다.
3) 중간 처리와 최종 처리를 수행하도록 파이프 라인을 형성할 수 있다.</p>

<h3 id="컬렉션으로부터-스트림-얻기">컬렉션으로부터 스트림 얻기</h3>
<p>java.util.Collection 인터페이스는 스트림과 parallelStream() 메소드를 가지고 있기 때문에 자식 인터페이스인 List와 Set 인터페이스를 구현한
 모든 컬렉션에서 객체 스트림을 얻을 수 있다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">ch17.sec04.exam01</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Product</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">pno</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">name</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">company</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">price</span><span class="o">;</span>

    <span class="kd">public</span> <span class="nf">Product</span><span class="o">(</span><span class="kt">int</span> <span class="n">pno</span><span class="o">,</span> <span class="nc">String</span> <span class="n">name</span><span class="o">,</span> <span class="nc">String</span> <span class="n">company</span><span class="o">,</span> <span class="kt">int</span> <span class="n">price</span><span class="o">){</span>
        <span class="k">this</span><span class="o">.</span><span class="na">pno</span> <span class="o">=</span> <span class="n">pno</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">company</span> <span class="o">=</span> <span class="n">company</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">price</span> <span class="o">=</span> <span class="n">price</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getPno</span><span class="o">()</span> <span class="o">{</span><span class="k">return</span> <span class="n">pno</span><span class="o">;}</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span><span class="k">return</span> <span class="n">name</span><span class="o">;}</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getCompany</span><span class="o">()</span> <span class="o">{</span><span class="k">return</span> <span class="n">company</span><span class="o">;}</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getPrice</span><span class="o">()</span> <span class="o">{</span><span class="k">return</span> <span class="n">price</span><span class="o">;}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">toString</span><span class="o">(){</span>
        <span class="k">return</span> <span class="k">new</span> <span class="nf">StringBuilder</span><span class="o">()</span>
                <span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"{"</span><span class="o">)</span>
                <span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"pno: "</span><span class="o">+</span><span class="n">pno</span><span class="o">+</span><span class="s">", "</span><span class="o">)</span>
                <span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"name: "</span><span class="o">+</span><span class="n">name</span><span class="o">+</span><span class="s">", "</span><span class="o">)</span>
                <span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"company: "</span><span class="o">+</span><span class="n">company</span><span class="o">+</span><span class="s">", "</span><span class="o">)</span>
                <span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"price: "</span><span class="o">+</span><span class="n">price</span><span class="o">)</span>
                <span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"}"</span><span class="o">)</span>
                <span class="o">.</span><span class="na">toString</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">ch17.sec04.exam01</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.stream.Stream</span><span class="o">;</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">StreamExample</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">//List 컬렉션 생성</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Product</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="mi">5</span><span class="o">;</span> <span class="n">i</span><span class="o">++){</span>
            <span class="nc">Product</span> <span class="n">product</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Product</span><span class="o">(</span><span class="n">i</span><span class="o">,</span> <span class="s">"상품"</span><span class="o">+</span><span class="n">i</span><span class="o">,</span> <span class="s">"멋진 회사 "</span><span class="o">,</span>
                    <span class="o">(</span><span class="kt">int</span><span class="o">)(</span><span class="mi">10000</span><span class="o">*</span><span class="nc">Math</span><span class="o">.</span><span class="na">random</span><span class="o">()));</span>
            <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">product</span><span class="o">);</span>
        <span class="o">}</span>

        <span class="c1">//객체 스트림 얻기</span>
        <span class="nc">Stream</span><span class="o">&lt;</span><span class="nc">Product</span><span class="o">&gt;</span> <span class="n">stream</span> <span class="o">=</span> <span class="n">list</span><span class="o">.</span><span class="na">stream</span><span class="o">();</span>
        <span class="n">stream</span><span class="o">.</span><span class="na">forEach</span><span class="o">(</span><span class="n">p</span> <span class="o">-&gt;</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">p</span><span class="o">));</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="배열로부터-스트림-얻기">배열로부터 스트림 얻기</h3>
<p>java.util.Arrays 클래스를 이용하면 다양한 종류의 배열로부터 스트림을 얻을 수 있다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">ch17.sec04.exam02</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.stream.IntStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.stream.Stream</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">StreamExample</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span><span class="o">[]</span> <span class="n">strArray</span> <span class="o">=</span> <span class="o">{</span><span class="s">"홍길동"</span><span class="o">,</span> <span class="s">"신용권"</span><span class="o">,</span> <span class="s">"김미나"</span><span class="o">};</span>
        <span class="nc">Stream</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">strStream</span> <span class="o">=</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="n">strArray</span><span class="o">);</span>
        <span class="n">strStream</span><span class="o">.</span><span class="na">forEach</span><span class="o">(</span><span class="n">item</span> <span class="o">-&gt;</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">item</span><span class="o">+</span><span class="s">","</span><span class="o">));</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>

        <span class="kt">int</span><span class="o">[]</span> <span class="n">intArray</span> <span class="o">=</span> <span class="o">{</span><span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">5</span><span class="o">};</span>
        <span class="nc">IntStream</span> <span class="n">intStream</span> <span class="o">=</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="n">intArray</span><span class="o">);</span>
        <span class="n">intStream</span><span class="o">.</span><span class="na">forEach</span><span class="o">(</span><span class="n">item</span> <span class="o">-&gt;</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">item</span><span class="o">+</span><span class="s">","</span><span class="o">));</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<h3 id="숫자-범위로부터-스트림-얻기">숫자 범위로부터 스트림 얻기</h3>
<p>IntStream 또는 LongStream의 정적 메소드인 range()와 rangeClosed() 메소드를 이용하면 특정 범위의 정수 스트림을 얻을 수 있다. 
첫 번째 매개값은 시작 수이고 두 번째 매개값은 끝 수인데, 끝 수를 포함하지 않으면 range(), 포함하면 rangeClosed()를 사용한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">ch17.sec04.exam03</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.stream.IntStream</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">StreamExample</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="n">sum</span><span class="o">;</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">IntStream</span> <span class="n">stream</span> <span class="o">=</span> <span class="nc">IntStream</span><span class="o">.</span><span class="na">rangeClosed</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span><span class="mi">100</span><span class="o">);</span>
        <span class="n">stream</span><span class="o">.</span><span class="na">forEach</span><span class="o">(</span><span class="n">a</span> <span class="o">-&gt;</span> <span class="n">sum</span><span class="o">+=</span><span class="n">a</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"총합 : "</span><span class="o">+</span><span class="n">sum</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<h3 id="요소-걸러내기필터링">요소 걸러내기(필터링)</h3>
<p>필터링은 요소를 걸러내는 중간 처리 기능이다. 필터링 메소드에는 다음과 같이 distinct()와 filter()가 있다.</p>

<p><img src="https://user-images.githubusercontent.com/97949070/227077195-6480e5c9-9ffd-4468-a89f-dfeb04f040dd.png" alt="스크린샷 2023-03-23 오전 9 38 18" /></p>

<p>dinstinct() 메소드는 요소의 중복을 제거한다. 객체 스트림(Stream)일 경우, equals() 메소드의 리턴값이 true이면 
동일한 요소로 판단한다. IntStream, LongStream, DoubleStream은 같은 값일 경우 중복을 제거한다.</p>

<p>Predicate는 함수형 인터페이스로, 다음과 같은 종류가 있다.</p>

<p><img src="https://user-images.githubusercontent.com/97949070/227077216-17243c2d-ecb3-4c41-a6a6-e01898892bcf.png" alt="스크린샷 2023-03-23 오전 9 41 25" /></p>

<p>Predicate<T>을 람다식으로 표현하면 다음과 같다.</T></p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="no">T</span> <span class="o">-&gt;</span> <span class="o">{...</span> <span class="k">return</span> <span class="kc">true</span><span class="o">}</span>
 <span class="n">또는</span>
 <span class="no">T</span> <span class="o">-&gt;</span> <span class="kc">true</span><span class="o">;</span>     <span class="c1">//return 문만 있을 경우 중괄호와 return 키워드 생략 가능</span>
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">ch17.sec05</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">FilteringExample</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">//List 컬렉션 생성</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"홍길동"</span><span class="o">);</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"신용권"</span><span class="o">);</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"감자바"</span><span class="o">);</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"신용권"</span><span class="o">);</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"신민철"</span><span class="o">);</span>

        <span class="c1">//중복 요소 제거</span>
        <span class="n">list</span><span class="o">.</span><span class="na">stream</span><span class="o">()</span>
                <span class="o">.</span><span class="na">distinct</span><span class="o">()</span>
                <span class="o">.</span><span class="na">forEach</span><span class="o">(</span><span class="n">n</span><span class="o">-&gt;</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">n</span><span class="o">));</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>

        <span class="c1">//신으로 시작하는 요소만 필터링</span>
        <span class="n">list</span><span class="o">.</span><span class="na">stream</span><span class="o">()</span>
                <span class="o">.</span><span class="na">filter</span><span class="o">(</span><span class="n">n</span><span class="o">-&gt;</span><span class="n">n</span><span class="o">.</span><span class="na">startsWith</span><span class="o">(</span><span class="s">"신"</span><span class="o">))</span>
                <span class="o">.</span><span class="na">forEach</span><span class="o">(</span><span class="n">n</span><span class="o">-&gt;</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">n</span><span class="o">));</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>
        
        <span class="c1">//중복 요소를 먼저 제거하고, 신으로 시작하는 요소만 필터링</span>
        <span class="n">list</span><span class="o">.</span><span class="na">stream</span><span class="o">()</span>
                <span class="o">.</span><span class="na">distinct</span><span class="o">()</span>
                <span class="o">.</span><span class="na">filter</span><span class="o">(</span><span class="n">n</span><span class="o">-&gt;</span><span class="n">n</span><span class="o">.</span><span class="na">startsWith</span><span class="o">(</span><span class="s">"신"</span><span class="o">))</span>
                <span class="o">.</span><span class="na">forEach</span><span class="o">(</span><span class="n">n</span><span class="o">-&gt;</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">n</span><span class="o">));</span>
    <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<h3 id="요소-정렬">요소 정렬</h3>
<p>정렬은 요소를 오름차순 또는 내림차순으로 정렬하는 중간 처리 기능이다.</p>

<table>
  <thead>
    <tr>
      <th>리턴 타입</th>
      <th>메소드(매개변수)</th>
      <th>설명</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Stream<T></T></td>
      <td>sorted()</td>
      <td>Comparable 요소를 정렬한 새로운 스트림 생성</td>
    </tr>
    <tr>
      <td>Stream<T></T></td>
      <td>sorted(Comparator<T>)</T></td>
      <td>요소를 Comparator에 따라 정렬한 새 스트림 생성</td>
    </tr>
    <tr>
      <td>Doublestream</td>
      <td>sorted()</td>
      <td>double 요소를 올림차순으로 정렬</td>
    </tr>
    <tr>
      <td>IntStream</td>
      <td>sorted</td>
      <td>int 요소를 올림차순으로 정렬</td>
    </tr>
    <tr>
      <td>LongStream</td>
      <td>sorted</td>
      <td>long 요소를 올림차순으로 정렬</td>
    </tr>
  </tbody>
</table>

<h4 id="comparable-구현-객체의-정렬">Comparable 구현 객체의 정렬</h4>
<p>스트림의 요소가 객체일 경우 객체가 Comparable을 구현하고 있어야만 sorted() 메소드를 사용하여 정렬할 수 있다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Xxx</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
 <span class="nc">Stream</span><span class="o">&lt;</span><span class="nc">Xxx</span><span class="o">&gt;</span> <span class="n">stream</span> <span class="o">=</span> <span class="n">list</span><span class="o">.</span><span class="na">stream</span><span class="o">();</span>
 <span class="nc">Stream</span><span class="o">&lt;</span><span class="nc">Xxx</span><span class="o">&gt;</span> <span class="n">orderedStream</span> <span class="o">=</span> <span class="n">stream</span><span class="o">.</span><span class="na">sorted</span><span class="o">();</span>
</code></pre></div></div>

<p>만약 내림차순으로 정렬하고 싶다면 다음과 같이 Comparator.reverseOrder() 메소드가 리턴하는 Comparator를 매개값으로 제공하면 된다.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nc">Stream</span><span class="o">&lt;</span><span class="nc">Xxx</span><span class="o">&gt;</span> <span class="n">reverseOrderedStream</span> <span class="o">=</span> <span class="n">stream</span><span class="o">.</span><span class="na">sorted</span><span class="o">(</span><span class="nc">Comparator</span><span class="o">.</span><span class="na">reverseOrder</span><span class="o">());</span>
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">ch17.sec07.exam01</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Student</span> <span class="kd">implements</span> <span class="nc">Comparable</span><span class="o">&lt;</span><span class="nc">Student</span><span class="o">&gt;{</span>
 <span class="kd">private</span> <span class="nc">String</span> <span class="n">name</span><span class="o">;</span>
 <span class="kd">private</span> <span class="kt">int</span> <span class="n">score</span><span class="o">;</span>

 <span class="kd">public</span> <span class="nf">Student</span><span class="o">(</span><span class="nc">String</span> <span class="n">name</span><span class="o">,</span> <span class="kt">int</span> <span class="n">score</span><span class="o">){</span>
  <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
  <span class="k">this</span><span class="o">.</span><span class="na">score</span> <span class="o">=</span> <span class="n">score</span><span class="o">;</span>
 <span class="o">}</span>
 <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span><span class="k">return</span> <span class="n">name</span><span class="o">;}</span>
 <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getScore</span><span class="o">()</span> <span class="o">{</span><span class="k">return</span> <span class="n">score</span><span class="o">;}</span>

 <span class="nd">@Override</span>
 <span class="kd">public</span> <span class="kt">int</span> <span class="nf">compareTo</span><span class="o">(</span><span class="nc">Student</span> <span class="n">o</span><span class="o">){</span>
  <span class="k">return</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">compare</span><span class="o">(</span><span class="n">score</span><span class="o">,</span> <span class="n">o</span><span class="o">.</span><span class="na">score</span><span class="o">);</span>
 <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">ch17.sec07.exam01</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">SortingExample</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">//List 컬렉션 생성</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Student</span><span class="o">&gt;</span> <span class="n">studentList</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
        <span class="n">studentList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">Student</span><span class="o">(</span><span class="s">"홍길동"</span><span class="o">,</span> <span class="mi">30</span><span class="o">));</span>
        <span class="n">studentList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">Student</span><span class="o">(</span><span class="s">"신용권"</span><span class="o">,</span> <span class="mi">10</span><span class="o">));</span>
        <span class="n">studentList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">Student</span><span class="o">(</span><span class="s">"유미선"</span><span class="o">,</span> <span class="mi">20</span><span class="o">));</span>

        <span class="c1">//점수를 기준으로 오름차순으로 정렬한 새 스트림 얻기</span>
        <span class="n">studentList</span><span class="o">.</span><span class="na">stream</span><span class="o">()</span>
                <span class="o">.</span><span class="na">sorted</span><span class="o">()</span>
                <span class="o">.</span><span class="na">forEach</span><span class="o">(</span><span class="n">s</span> <span class="o">-&gt;</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">": "</span><span class="o">+</span><span class="n">s</span><span class="o">.</span><span class="na">getScore</span><span class="o">()));</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>

        <span class="c1">//점수를 기준으로 내림차순으로 정렬한 새 스트림 얻기</span>
        <span class="n">studentList</span><span class="o">.</span><span class="na">stream</span><span class="o">()</span>
                <span class="o">.</span><span class="na">sorted</span><span class="o">(</span><span class="nc">Comparator</span><span class="o">.</span><span class="na">reverseOrder</span><span class="o">())</span>
                <span class="o">.</span><span class="na">forEach</span><span class="o">(</span><span class="n">s</span><span class="o">-&gt;</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">": "</span><span class="o">+</span><span class="n">s</span><span class="o">.</span><span class="na">getScore</span><span class="o">()));</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h4 id="comparator를-이용한-정렬">Comparator를 이용한 정렬</h4>
<p>요소 객체가 Comparable을 구현하고 있지 않다면, 비교자를 제공하면 요소를 정렬시킬 수 있다. 비교자는 
Comparator 인터페이스를 구현한 객체를 말하는데 다음과 같이 간단하게 람다식으로 작성할 수도 있다.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="n">sorted</span><span class="o">((</span><span class="n">o1</span><span class="o">,</span> <span class="n">o2</span><span class="o">)-&gt;{...})</span>
</code></pre></div></div>
<p>중괄호 안에는 o1이 o2보다 작으면 음수, 같으면 0, 크면 양수를 리턴하도록 작성하면 된다. 
o1과 o2가 정수일 경우에는 Integer.compare(o1, o2)를, 실수일 경우에는 Double.compare(o1, o2)를 호출해서 리턴값을 리턴해도 좋다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">ch17.sec07.exam02</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Student</span> <span class="o">{</span>
 <span class="kd">private</span> <span class="nc">String</span> <span class="n">name</span><span class="o">;</span>
 <span class="kd">private</span> <span class="kt">int</span> <span class="n">score</span><span class="o">;</span>

 <span class="kd">public</span> <span class="nf">Student</span><span class="o">(</span><span class="nc">String</span> <span class="n">name</span><span class="o">,</span> <span class="kt">int</span> <span class="n">score</span><span class="o">){</span>
  <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
  <span class="k">this</span><span class="o">.</span><span class="na">score</span> <span class="o">=</span> <span class="n">score</span><span class="o">;</span>
 <span class="o">}</span>
 <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>
  <span class="k">return</span> <span class="n">name</span><span class="o">;</span>
 <span class="o">}</span>
 <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getScore</span><span class="o">()</span> <span class="o">{</span>
  <span class="k">return</span> <span class="n">score</span><span class="o">;</span>
 <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">ch17.sec07.exam02</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">SortingExample</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">//List 컬렉션 생성</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Student</span><span class="o">&gt;</span> <span class="n">studentList</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
        <span class="n">studentList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">Student</span><span class="o">(</span><span class="s">"홍길동"</span><span class="o">,</span><span class="mi">30</span><span class="o">));</span>
        <span class="n">studentList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">Student</span><span class="o">(</span><span class="s">"신용권"</span><span class="o">,</span><span class="mi">10</span><span class="o">));</span>
        <span class="n">studentList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">Student</span><span class="o">(</span><span class="s">"유미선"</span><span class="o">,</span><span class="mi">20</span><span class="o">));</span>

        <span class="c1">//점수를 기준으로 오름차순으로 정렬한 새 스트림 얻기</span>
        <span class="n">studentList</span><span class="o">.</span><span class="na">stream</span><span class="o">()</span>
                <span class="o">.</span><span class="na">sorted</span><span class="o">((</span><span class="n">s1</span><span class="o">,</span> <span class="n">s2</span><span class="o">)-&gt;</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">compare</span><span class="o">(</span><span class="n">s1</span><span class="o">.</span><span class="na">getScore</span><span class="o">(),</span> <span class="n">s2</span><span class="o">.</span><span class="na">getScore</span><span class="o">()))</span>
                <span class="o">.</span><span class="na">forEach</span><span class="o">(</span><span class="n">s</span> <span class="o">-&gt;</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">": "</span><span class="o">+</span><span class="n">s</span><span class="o">.</span><span class="na">getScore</span><span class="o">()));</span>

        <span class="c1">//점수를 기준으로 내림차순으로 정렬한 새 스트림 얻기</span>
        <span class="n">studentList</span><span class="o">.</span><span class="na">stream</span><span class="o">()</span>
                <span class="o">.</span><span class="na">sorted</span><span class="o">((</span><span class="n">s1</span><span class="o">,</span> <span class="n">s2</span><span class="o">)-&gt;</span><span class="nc">Integer</span><span class="o">.</span><span class="na">compare</span><span class="o">(</span><span class="n">s2</span><span class="o">.</span><span class="na">getScore</span><span class="o">(),</span> <span class="n">s1</span><span class="o">.</span><span class="na">getScore</span><span class="o">()))</span>
                <span class="o">.</span><span class="na">forEach</span><span class="o">(</span><span class="n">s</span><span class="o">-&gt;</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">": "</span><span class="o">+</span><span class="n">s</span><span class="o">.</span><span class="na">getScore</span><span class="o">()));</span>
    <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<ul>
  <li>출처: 이것이 자바다</li>
</ul>]]></content><author><name>eivomin</name></author><category term="Java" /><summary type="html"><![CDATA[스트림]]></summary></entry><entry><title type="html">[백준] 3273. 두 수의 합</title><link href="http://localhost:4000/baekjoon/%EB%B0%B1%EC%A4%80-3273-%EB%91%90-%EC%88%98%EC%9D%98-%ED%95%A9/" rel="alternate" type="text/html" title="[백준] 3273. 두 수의 합" /><published>2023-03-23T00:00:00+09:00</published><updated>2023-03-23T00:00:00+09:00</updated><id>http://localhost:4000/baekjoon/%EB%B0%B1%EC%A4%80-3273-%EB%91%90%20%EC%88%98%EC%9D%98%20%ED%95%A9</id><content type="html" xml:base="http://localhost:4000/baekjoon/%EB%B0%B1%EC%A4%80-3273-%EB%91%90-%EC%88%98%EC%9D%98-%ED%95%A9/"><![CDATA[<h2 id="3273---두-수의-합">3273.   두 수의 합</h2>

<hr />

<h3 id="code">Code</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">baekjoon</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">두수의합_3273</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>

        <span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>

        <span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span>  <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">(),</span> <span class="s">" "</span><span class="o">);</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
            <span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
        <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>

        <span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">arr</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++){</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span> <span class="n">j</span><span class="o">++){</span>
                <span class="k">if</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">]+</span><span class="n">arr</span><span class="o">[</span><span class="n">j</span><span class="o">]&gt;</span><span class="n">x</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
                <span class="k">if</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">]+</span><span class="n">arr</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">==</span> <span class="n">x</span><span class="o">)</span> <span class="n">cnt</span><span class="o">++;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">cnt</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>]]></content><author><name>eivomin</name></author><category term="Baekjoon" /><summary type="html"><![CDATA[3273. 두 수의 합]]></summary></entry><entry><title type="html">[백준] 2577. 숫자의 개수</title><link href="http://localhost:4000/baekjoon/%EB%B0%B1%EC%A4%80-2577-%EC%88%AB%EC%9E%90%EC%9D%98-%EA%B0%9C%EC%88%98/" rel="alternate" type="text/html" title="[백준] 2577. 숫자의 개수" /><published>2023-03-23T00:00:00+09:00</published><updated>2023-03-23T00:00:00+09:00</updated><id>http://localhost:4000/baekjoon/%EB%B0%B1%EC%A4%80-2577-%EC%88%AB%EC%9E%90%EC%9D%98%20%EA%B0%9C%EC%88%98</id><content type="html" xml:base="http://localhost:4000/baekjoon/%EB%B0%B1%EC%A4%80-2577-%EC%88%AB%EC%9E%90%EC%9D%98-%EA%B0%9C%EC%88%98/"><![CDATA[<h2 id="2577---숫자의-개수">2577.   숫자의 개수</h2>

<hr />

<h3 id="code">Code</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">baekjoon</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">숫자의개수_2577</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="kt">int</span> <span class="no">A</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="kt">int</span> <span class="no">B</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="kt">int</span> <span class="no">C</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>

        <span class="kt">int</span> <span class="n">sum</span> <span class="o">=</span> <span class="no">A</span><span class="o">*</span><span class="no">B</span><span class="o">*</span><span class="no">C</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">sumStr</span> <span class="o">=</span> <span class="n">sum</span><span class="o">+</span><span class="s">""</span><span class="o">;</span>

        <span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">10</span><span class="o">];</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span> <span class="n">sumStr</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span>
            <span class="n">arr</span><span class="o">[</span><span class="n">sumStr</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)-</span><span class="sc">'0'</span><span class="o">]++;</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="mi">10</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
    <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>]]></content><author><name>eivomin</name></author><category term="Baekjoon" /><summary type="html"><![CDATA[2577. 숫자의 개수]]></summary></entry><entry><title type="html">[백준] 1919. 애너그램 만들기</title><link href="http://localhost:4000/baekjoon/%EB%B0%B1%EC%A4%80-1919-%EC%95%A0%EB%84%88%EA%B7%B8%EB%9E%A8-%EB%A7%8C%EB%93%A4%EA%B8%B0/" rel="alternate" type="text/html" title="[백준] 1919. 애너그램 만들기" /><published>2023-03-23T00:00:00+09:00</published><updated>2023-03-23T00:00:00+09:00</updated><id>http://localhost:4000/baekjoon/%EB%B0%B1%EC%A4%80-1919-%EC%95%A0%EB%84%88%EA%B7%B8%EB%9E%A8%20%EB%A7%8C%EB%93%A4%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/baekjoon/%EB%B0%B1%EC%A4%80-1919-%EC%95%A0%EB%84%88%EA%B7%B8%EB%9E%A8-%EB%A7%8C%EB%93%A4%EA%B8%B0/"><![CDATA[<h2 id="1919---애너그램-만들기">1919.   애너그램 만들기</h2>

<hr />

<h3 id="code">Code</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">baekjoon</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">애너그램만들기_1919</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">arr1</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">26</span><span class="o">];</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">arr2</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">26</span><span class="o">];</span>

        <span class="nc">String</span> <span class="n">str1</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
        <span class="nc">String</span> <span class="n">str2</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">str1</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span>
            <span class="n">arr1</span><span class="o">[</span><span class="n">str1</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)-</span><span class="sc">'a'</span><span class="o">]++;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">str2</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span>
            <span class="n">arr2</span><span class="o">[</span><span class="n">str2</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)-</span><span class="sc">'a'</span><span class="o">]++;</span>

        <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="mi">26</span><span class="o">;</span> <span class="n">i</span><span class="o">++){</span>
            <span class="n">cnt</span> <span class="o">+=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">abs</span><span class="o">(</span><span class="n">arr1</span><span class="o">[</span><span class="n">i</span><span class="o">]-</span><span class="n">arr2</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
        <span class="o">}</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">cnt</span><span class="o">);</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>]]></content><author><name>eivomin</name></author><category term="Baekjoon" /><summary type="html"><![CDATA[1919. 애너그램 만들기]]></summary></entry></feed>