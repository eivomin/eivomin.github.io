I"<h2 id="5014--스타트링크">5014.  스타트링크</h2>

<hr />

<h3 id="code">Code</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">BFS</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">boj_5014_스타트링크</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
		<span class="nc">BufferedReader</span> <span class="n">in</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
		<span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">in</span><span class="o">.</span><span class="na">readLine</span><span class="o">(),</span> <span class="s">" "</span><span class="o">);</span>

		<span class="kt">int</span> <span class="no">F</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span> <span class="c1">// 총 개수</span>
		<span class="kt">int</span> <span class="no">S</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span> <span class="c1">// 강호 위치</span>
		<span class="kt">int</span> <span class="no">G</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span> <span class="c1">// 목적</span>
		<span class="kt">int</span> <span class="no">U</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span> <span class="c1">// 위로</span>
		<span class="kt">int</span> <span class="no">D</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span> <span class="c1">// 아래로</span>

		<span class="kt">int</span><span class="o">[]</span> <span class="n">map</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="no">F</span> <span class="o">+</span> <span class="mi">1</span><span class="o">];</span>
		<span class="nc">Arrays</span><span class="o">.</span><span class="na">fill</span><span class="o">(</span><span class="n">map</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">);</span>

		<span class="kt">int</span><span class="o">[]</span> <span class="n">dir</span> <span class="o">=</span> <span class="o">{</span> <span class="no">U</span><span class="o">,</span> <span class="o">-</span><span class="no">D</span> <span class="o">};</span>

		<span class="n">map</span><span class="o">[</span><span class="no">S</span><span class="o">]</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		<span class="nc">Queue</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">queue</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">&lt;&gt;();</span>
		<span class="n">queue</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="no">S</span><span class="o">);</span>

		<span class="k">while</span> <span class="o">(!</span><span class="n">queue</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
			<span class="kt">int</span> <span class="n">tmp</span> <span class="o">=</span> <span class="n">queue</span><span class="o">.</span><span class="na">poll</span><span class="o">();</span>

			<span class="k">if</span> <span class="o">(</span><span class="n">tmp</span> <span class="o">==</span> <span class="no">G</span><span class="o">)</span> <span class="o">{</span>
				<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">map</span><span class="o">[</span><span class="n">tmp</span><span class="o">]);</span>
				<span class="k">return</span><span class="o">;</span>
			<span class="o">}</span>
			<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">d</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">d</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="o">;</span> <span class="n">d</span><span class="o">++)</span> <span class="o">{</span>
				<span class="kt">int</span> <span class="n">ndir</span> <span class="o">=</span> <span class="n">tmp</span> <span class="o">+</span> <span class="n">dir</span><span class="o">[</span><span class="n">d</span><span class="o">];</span>

				<span class="k">if</span> <span class="o">(</span><span class="n">ndir</span> <span class="o">&lt;=</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">ndir</span> <span class="o">&gt;</span> <span class="no">F</span><span class="o">)</span>
					<span class="k">continue</span><span class="o">;</span>
				<span class="k">if</span> <span class="o">(</span><span class="n">map</span><span class="o">[</span><span class="n">ndir</span><span class="o">]</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="o">)</span>
					<span class="k">continue</span><span class="o">;</span>
				<span class="n">queue</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">ndir</span><span class="o">);</span>
				<span class="n">map</span><span class="o">[</span><span class="n">ndir</span><span class="o">]</span> <span class="o">=</span> <span class="n">map</span><span class="o">[</span><span class="n">tmp</span><span class="o">]</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>
			<span class="o">}</span>

		<span class="o">}</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"use the stairs"</span><span class="o">);</span>
	<span class="o">}</span>

<span class="o">}</span>

</code></pre></div></div>
:ET