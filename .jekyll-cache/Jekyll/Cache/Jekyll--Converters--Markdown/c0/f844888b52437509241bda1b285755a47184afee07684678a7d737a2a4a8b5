I"9(<h2 id="3289--서로소-집합">3289.  서로소 집합</h2>

<hr />

<h3 id="code">Code</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
 
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
 
    <span class="kd">static</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">parents</span><span class="o">;</span>
    <span class="kd">static</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">rank</span><span class="o">;</span>
 
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
 
        <span class="kt">int</span> <span class="no">T</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
 
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">tc</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">tc</span> <span class="o">&lt;=</span> <span class="no">T</span><span class="o">;</span> <span class="n">tc</span><span class="o">++)</span> <span class="o">{</span>
 
            <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span> <span class="c1">// 원소 n개</span>
            <span class="kt">int</span> <span class="n">m</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span> <span class="c1">// 연산의 개수</span>
            <span class="n">parents</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span> <span class="o">+</span> <span class="mi">1</span><span class="o">];</span>
            <span class="n">rank</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span> <span class="o">+</span> <span class="mi">1</span><span class="o">];</span>
 
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
                <span class="n">parents</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"#"</span> <span class="o">+</span> <span class="n">tc</span> <span class="o">+</span> <span class="s">" "</span><span class="o">);</span>
             
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">m</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
                <span class="kt">int</span> <span class="n">temp</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
                <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
                <span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
 
                <span class="k">if</span> <span class="o">(</span><span class="n">temp</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                    <span class="nc">Union</span><span class="o">(</span><span class="n">a</span><span class="o">,</span> <span class="n">b</span><span class="o">);</span>
                <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">temp</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">if</span> <span class="o">(</span><span class="nc">FindSet</span><span class="o">(</span><span class="n">a</span><span class="o">)</span> <span class="o">==</span> <span class="nc">FindSet</span><span class="o">(</span><span class="n">b</span><span class="o">))</span>
                        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
                    <span class="k">else</span>
                        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
                <span class="o">}</span>
 
            <span class="o">}</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>
 
        <span class="o">}</span>
    <span class="o">}</span>
 
    <span class="kd">static</span> <span class="kt">void</span> <span class="nf">Union</span><span class="o">(</span><span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">px</span> <span class="o">=</span> <span class="nc">FindSet</span><span class="o">(</span><span class="n">a</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">py</span> <span class="o">=</span> <span class="nc">FindSet</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>
        <span class="c1">// 되나가나 px가 py로 붙지 말고</span>
        <span class="c1">// px와 py의 랭크를 비교해서, 더 낮은 놈이 높은 곳에 붙도록하고</span>
        <span class="c1">// 랭크가 같은 경우 아무나 붙이되 부모가 되는 쪽의 랭크를 하나 증가시키자.</span>
 
        <span class="k">if</span> <span class="o">(</span><span class="n">rank</span><span class="o">[</span><span class="n">px</span><span class="o">]</span> <span class="o">&gt;</span> <span class="n">rank</span><span class="o">[</span><span class="n">py</span><span class="o">])</span> <span class="o">{</span>
            <span class="n">parents</span><span class="o">[</span><span class="n">py</span><span class="o">]</span> <span class="o">=</span> <span class="n">px</span><span class="o">;</span>
        <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">rank</span><span class="o">[</span><span class="n">px</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">rank</span><span class="o">[</span><span class="n">py</span><span class="o">])</span> <span class="o">{</span>
            <span class="n">parents</span><span class="o">[</span><span class="n">px</span><span class="o">]</span> <span class="o">=</span> <span class="n">py</span><span class="o">;</span>
        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
            <span class="n">parents</span><span class="o">[</span><span class="n">py</span><span class="o">]</span> <span class="o">=</span> <span class="n">px</span><span class="o">;</span>
            <span class="n">rank</span><span class="o">[</span><span class="n">px</span><span class="o">]++;</span>
        <span class="o">}</span>
 
    <span class="o">}</span>
 
    <span class="kd">static</span> <span class="kt">int</span> <span class="nf">FindSet</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">x</span> <span class="o">==</span> <span class="n">parents</span><span class="o">[</span><span class="n">x</span><span class="o">])</span> <span class="o">{</span>
            <span class="k">return</span> <span class="n">x</span><span class="o">;</span>
        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
            <span class="c1">// 아니라면, 부모에 대해서 대표자 찾기 재귀호출</span>
            <span class="n">parents</span><span class="o">[</span><span class="n">x</span><span class="o">]</span> <span class="o">=</span> <span class="nc">FindSet</span><span class="o">(</span><span class="n">parents</span><span class="o">[</span><span class="n">x</span><span class="o">]);</span>
            <span class="k">return</span> <span class="n">parents</span><span class="o">[</span><span class="n">x</span><span class="o">];</span>
 
        <span class="o">}</span>
    <span class="o">}</span>
 
<span class="o">}</span>
</code></pre></div></div>

:ET