I"Ø<h2 id="level2--ë‹¤ë¦¬ë¥¼ì§€ë‚˜ëŠ”íŠ¸ëŸ­">level2.  ë‹¤ë¦¬ë¥¼ì§€ë‚˜ëŠ”íŠ¸ëŸ­</h2>

<hr />

<h3 id="code">Code</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">lv2</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Truck</span><span class="o">{</span>
    <span class="kt">int</span> <span class="n">weight</span><span class="o">,</span> <span class="n">index</span><span class="o">;</span>
    <span class="kd">public</span> <span class="nf">Truck</span><span class="o">(</span><span class="kt">int</span> <span class="n">weight</span><span class="o">,</span> <span class="kt">int</span> <span class="n">index</span><span class="o">){</span>
        <span class="k">this</span><span class="o">.</span><span class="na">weight</span> <span class="o">=</span> <span class="n">weight</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">index</span> <span class="o">=</span> <span class="n">index</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="kd">class</span> <span class="nc">programmers_level2_ë‹¤ë¦¬ë¥¼ì§€ë‚˜ëŠ”íŠ¸ëŸ­</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">bridge_length</span><span class="o">,</span> <span class="kt">int</span> <span class="n">weight</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">truck_weights</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Queue</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">waitTruck</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">&lt;&gt;();</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Truck</span><span class="o">&gt;</span> <span class="n">workingTruck</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">truck</span> <span class="o">:</span> <span class="n">truck_weights</span><span class="o">){</span>
            <span class="n">waitTruck</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">truck</span><span class="o">);</span>
        <span class="o">}</span>

        <span class="kt">int</span> <span class="n">time</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

        <span class="kt">int</span> <span class="n">totalWeight</span> <span class="o">=</span> <span class="n">waitTruck</span><span class="o">.</span><span class="na">peek</span><span class="o">();</span>

        <span class="n">workingTruck</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">Truck</span><span class="o">(</span><span class="n">waitTruck</span><span class="o">.</span><span class="na">poll</span><span class="o">(),</span> <span class="mi">0</span><span class="o">));</span>

        <span class="k">while</span><span class="o">(!</span><span class="n">workingTruck</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()){</span>
            <span class="n">time</span><span class="o">++;</span>

            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">workingTruck</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++){</span>
                <span class="n">workingTruck</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">index</span><span class="o">++;</span>
            <span class="o">}</span>

            <span class="k">if</span><span class="o">(</span><span class="n">workingTruck</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">index</span> <span class="o">&gt;</span> <span class="n">bridge_length</span><span class="o">){</span>
                <span class="n">totalWeight</span> <span class="o">-=</span> <span class="n">workingTruck</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">weight</span><span class="o">;</span>
                <span class="n">workingTruck</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
            <span class="o">}</span>

            <span class="k">if</span><span class="o">(!</span><span class="n">waitTruck</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()</span> <span class="o">&amp;&amp;</span> <span class="n">totalWeight</span><span class="o">+</span><span class="n">waitTruck</span><span class="o">.</span><span class="na">peek</span><span class="o">()</span> <span class="o">&lt;=</span> <span class="n">weight</span><span class="o">){</span>
                <span class="kt">int</span> <span class="n">nextTruck</span> <span class="o">=</span> <span class="n">waitTruck</span><span class="o">.</span><span class="na">poll</span><span class="o">();</span>
                <span class="n">totalWeight</span> <span class="o">+=</span> <span class="n">nextTruck</span><span class="o">;</span>
                <span class="n">workingTruck</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">Truck</span><span class="o">(</span><span class="n">nextTruck</span><span class="o">,</span> <span class="mi">1</span><span class="o">));</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">return</span> <span class="n">time</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

:ET